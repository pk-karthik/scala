version: ~> 1.0 # needed for imports

import: scala/scala-dev:travis/default.yml

language: scala

stages:
  - name: build

jobs:
    include:

      # full bootstrap and publish
      - stage: build
        if: type != pull_request
        script:
          # see comment in `bootstrap_fun` for details on the procedure
          # env available in each stage
          #  - by travis config (see below): secret env vars
          #  - by `common` script: WORKSPACE, IVY2_DIR, SBT_CMD, integrationRepoUrl
          #  - by `bootstrap_fun`: publishPrivateTask, ...
          - (cd admin && ./init.sh)
          - source scripts/common
          - source scripts/bootstrap_fun
          - determineScalaVersion
          - deriveModuleVersions
          - removeExistingBuilds $integrationRepoUrl
          - if [ ! -z "$STARR_REF" ]; then buildStarr; fi
          - buildLocker
          - buildQuick
          - triggerScalaDist

      # pull request validation (w/ mini-bootstrap)
      # "mini" in these senses:
      # - it doesn't use the complicated legacy scripts.
      # - it doesn't publish to scala-pr-validation-snapshots
      #   (because we need secrets for that and Travis-CI doesn't give PR jobs access to secrets)
      # it is still a true bootstrap.
      - stage: build
        name: "JDK 8 pr validation"
        if: type = pull_request
        script:
          - sbt -warn setupPublishCore generateBuildCharacterPropertiesFile headerCheck publishLocal
          - STARR=`cat buildcharacter.properties | grep ^maven.version.number | cut -d= -f2` && echo $STARR
          - sbt -Dstarr.version=$STARR -warn setupValidateTest test:compile info testAll

      # build the spec using jekyll
      - stage: build
        language: ruby
        install:
          - ruby -v
          - gem install bundler
          - bundler --version
          - bundle install
        script:
        - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then (cd admin && ./init.sh); fi'
        - bundle exec jekyll build -s spec/ -d build/spec
        after_success:
        - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ./scripts/travis-publish-spec.sh; fi'

env:
  global:
    - ADOPTOPENJDK=8
    - secure: "TuJOUtALynPd+MV1AuMeIpVb8BUBHr7Ul7FS48XhS2PyuTRpEBkSWybYcNg3AXyzmWDAuOjUxbaNMQBvP8vvehTbIYls5H5wTGKvj0D0TNVaPIXjF8bA8KyNat9xGNzhnWm2/2BMaWpKBJWRF7Jb+zHhijMYCJEbkMtoiE5R/mY=" # PRIV_KEY_SECRET, for scripts/travis-publish-spec.sh
    - secure: "T1fxtvLTxioyXJYiC/zVYdNYsBOt+0Piw+xE04rB1pzeKahm9+G2mISdcAyqv6/vze9eIJt6jNHHpKX32/Z3Cs1/Ruha4m3k+jblj3S0SbxV6ht2ieJXLT5WoUPFRrU68KXI8wqUadXpjxeJJV53qF2FC4lhfMUsw1IwwMhdaE8=" # PRIVATE_REPO_PASS
    - secure: "feE5A8mYNpkNQKVwCj3aXrwjVrJWh/4ENpRfFlr2HOD9ORk1GORD5Yq907WZd+dTkYK54Lh1gA+qHOCIDgJHbi9ZLU+kjzEjtYKF6lQy6Wb0LI8smTOnAA6IWVVYifiXw8d66MI2MKZb2jjGeIzy8Q00SZjLhEGjLyTeCIB88Ws=" # SONA_USER
    - secure: "ek3As5q2tL8UBXcxSBbv4v5YgsoPD41SCzPOSu72kzfbngyxgQxrcziU5pIM+Lib9KaWex7hVVWNL38tMyDbu+0OpDv8bPjMujzlDx5I2pJUfuOJo7QRYsJE1nsXcY4cA72cCLfbRcLEkvtDAhcdLSaUOqlyQe5BY4X4fY5eoPA=" # SONA_PASS
    - secure: "dbAvl6KEuLwZ0MVQPZihFsPzCdiLbX0EFk3so+hcfEbksrmLQ1tn4X5ZM7Wy1UDR8uN9lxngEwHch7a7lKqpugzmXMew9Wnikr9WBWbJT77Z+XJ/jHI6YuiCRpRo+nvxXGp9Ry80tSIgx5eju0J83IaJL41BWlBkvyAd7YAHORI=" # GPG_SUBKEY_SECRET
    - secure: "RTyzS6nUgthupw5M0fPwTlcOym1sWgBo8eXYepB2xGiQnRu4g583BGuNBW1UZ3vIjRETi/UKQ1HtMR+i7D8ptF1cNpomopncVJA1iy7pU2w0MJ0xgIPMuvtkIa3kxocd/AnxAp+UhUad3nC8lDpkvZsUhhyA0fb4iPKipd2b2xY=" # TRAVIS_TOKEN (login with GitHub as SethTisue)

# caching for sdkman / sbt / ivy / coursier imported from scala-dev
cache:
  directories:
    - $HOME/.rvm

notifications:
  webhooks: https://scala-ci.typesafe.com/benchq/webhooks/travis
